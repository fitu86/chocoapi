get:
  description: List the items.
  tags:
    - Items
  operationId: getItems
  security: 
    - Auth: []
  parameters:
    - $ref: '../../openapi.yaml#/components/parameters/Fields'
    - $ref: '../../openapi.yaml#/components/parameters/Limit'
    - $ref: '../../openapi.yaml#/components/parameters/Meta'
    - $ref: '../../openapi.yaml#/components/parameters/Offset'
    - $ref: '../../openapi.yaml#/components/parameters/Single'
    - $ref: '../../openapi.yaml#/components/parameters/Sort'
    - $ref: '../../openapi.yaml#/components/parameters/Filter'
    - $ref: '../../openapi.yaml#/components/parameters/q'
    - name: status
      in: query
      description: Filter items by the given status
      explode: false
      schema:
        type: array
        items:
          type: string
  responses:
    '200':
      description: Successful request
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
    '401':
      $ref: '../../openapi.yaml#/components/responses/UnauthorizedError'
post:
  description: Create a new item.
  tags:
    - Items
  operationId: createItem
  parameters:
    - $ref: '../../openapi.yaml#/components/parameters/Meta'
  requestBody:
    content:
      application/json:
        schema:
          type: object
  responses:
    '200':
      description: Successful request
      content:
        application/json:
          schema:
            type: object
    '401':
      $ref: '../../openapi.yaml#/components/responses/UnauthorizedError'
parameters:
  - $ref: '../../openapi.yaml#/components/parameters/Collection'